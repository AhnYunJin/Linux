


		Server-A 
		
		Network 설정
		- DHCP서버로 부터 IP를 할당받지 않고 고정(Static)IP 설정
			-> Server-B, Client-Linux, Client-Win
			
			#vi /etc/sysconfig/network-scripts/ifcfg-eth0    // ifcfg-bond0
			BOOTPROTO=dhcp ---> static
			IPADDR
			NETMASK		// DHCP 실습 시 주석처리 했던 내용 모두 해제
			GATEWAY
			DNS1
			DNS2
			
			#service network restart
			

			FTP (File Transfer Protocol)
				- 파일 전송 프로토콜
				- 대량/대용량을 전송하는데 특화되어있다.
				- 기본 FTP는 보안에 취약(평문전송)하여 SFTP 혹은 FTPS를
				  이용하여 보안이 강화된 FTP서비스를 사용 할 수 있다.
				- TCP 20, 21번 포트를 상용하다. 

					20번 - Data Port
					-> 데이터 전송 시 사용
					
					21번 - Command Port
					-> 접속 및 명령어 전달 시 사용
					
				- FTP 동작 방식
					(1) Active Mode (능동) 
					(2) Passive Mode (수동)
					- 클라이언트가 접속할때 결정한다.
					
		VSFTP ( Very Secure FTP )
		- GNU / GPL 라이센스 관리하에 배포되고 되고있는 무료 FTP 서버용
		  프로그램이다.
		- 보안과 성능이 좋아 대부분의 기본 FTP프로그램으로 채택되어
		  사용되고 있다.
		  
		FTP 서버 (Server-A)
			#yum -y install vsftpd
			// vsftp 서버용 프로그램 설치
			#rpm -qa | grep vsftpd
			// 설치 확인 
			
		(1) 익명 사용자가 접속이 가능한 공개 FTP서버
			- 익명 사용자 계정 : anonymous
			- anonymous 계정은 ftp전 용 계정으로 ftp 접속 시 
			  패스워드 입력이 필요 없으며, 내부에서는 ftp라는 계정으로
			  동작한다.
			  
			#cat /etc/passwd | grep "ftp"
			ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
			ftp 계정의 홈디렉토리 -> /var/ftp
			
			anonymous 계정(ftp)을 이용하여 FTP서버에 접속을 하게되면,
			처음 위치하는 디렉토리가 /var/ftp 이다.
			
			주 설정 파일 수정
			/etc/vsftpd/
				- vsftp와 관련된 설정 파일이 위치한 디렉토리
				
			#vi /etc/vsftpd/vsftpd.conf		// 주 설정 파일
			12번행 anonymous_enable=YES
			// 익명사용자 사용할 수 있는 FTP서버.
			   (다운로드를 허용한다)
			
			27번행 anon_upload_enable=YES
			// 익명 사용자의 업로드를 허용한다.
			
			31번행 anon_mkdir_write_enable=YES
			//  익명 사용자의 디렉토리 생성을 허용한다.
			
			47번행 chown_uploads=YES
			48번행 chown_username=ftp
			// 익명 사용자가 업로드한 파일의 소유권을 변경하며,
			   소유권을 ftp로 지정한다.
			
			49번행 anon_umask=077
			// 익명 사용자가 업로드한 파일의 기본 허가권을 지정
			   UMASK 077 -> 디렉토리 허가권 700
			                파일 허가권 	600
			
			#service vsftpd start			// 데몬 활성화

			#mkdir /var/ftp/upload
			#chmod 773 /var/ftp/upload
			#cp /boot/vm* /var/ftp/pub/down_test1
			
			/var/ftp/pub		// 다운로드 가능한 디렉토리
			/var/ftp/upload		// 업로드가 가능한 디렉토리
		
		Client-Linux
		#yum -y install ftp
		#cd /tmp
		#cp /etc/passwd /tmp		// 업로드 테스트용 파일
		
		접속 방법
		(1) #ftp [IP/도메인주소]
				ex) #ftp 100.100.100.110
				    #ftp ftp.dongsam.com
		(2) #ftp
			ftp> open [IP/도메인주소]
			
			계정 : anonymous
			230 Login successful.	// 접속 성공 메세지
			
			명령어
				- cd, pwd, ls, mkdir, help
				- quit, exit, bye
				
				get	- 파일 다운로드
					ftp> get [파일]
					// 다운로드한 파일은 현재 경로에 저장된다.
					// 현재 경로 -> ftp 명령어를 사용한 경로
				
				put - 파일 업로드
					ftp> put [파일]
					// 업로드할 파일이 ftp 명령어를 사용한 경로에
					   있어야지만, 업로드가 가능하다.
					   
					   이미 동일한 파일의 이름이 서버나 클라이언트에
					   있다면 업로드/다운로드가 불가능하다.
					   
				hash - 업/다운로드 과정을 hash(#) 기호로 출력
				
				다운로드 실패 시
				#service iptables stop
				#setenforce 0
				방화벽이 활성화되어있거나 외부에서 파일 생성하는 것을
				차단하고 있는 설정을 모두 비활성화 시켜야 실습이 가능
				하다. 
				
				upload 디렉토리에서 ls가 안되는 이유
				-> 읽기 권한이 없음
				pub 디렉토리에서 업로드/디렉토리 생성이 안되는 이유
				-> 쓰기 권한이 없음
				
				drwxr-xr-x   pub
				drwxrwx-wx   upload
				
				Server-A
				#chmod 777 /var/ftp/pub
				#chmod 777 /var/ftp/upload
				
				Server-A
				/var/ftp/upload/ 디렉토리의 파일을 모두 삭제.
	
				아래와 동일하게 파일 생성 
				/var/ftp/pub/down_test1
				/var/ftp/pub/down_test2
				/var/ftp/pub/down_test3 
				
				Client-Linux
				현재 경로(/tmp)에있는 파일 모두 삭제
				#cp /etc/passwd ./passwd1
				#cp /etc/passwd ./passwd2
				#cp /etc/passwd ./passwd3
				
				동시에 여러개의 파일을 업/다운로드
				#mget [파일1] [파일2] [파일3] 
				#mput [파일1] [파일2] [파일3] 
				// mget file* 	메타 문자 사용 가능
				
				처음에는 mget, mput으로 파일 업/다운로드 진행.
				업로드 파일 모두 삭제 후, 다운로드한 파일 모두 삭제.
				
				prompt 명령어 사용하여 다시한번 mget, mput 명령어
				사용해보기
				
				prompt 사용 전/후의 차이점 생각해보기
				
				ftp> prompt 	// Interactive Mode Off

				
				Client-Win	
					http://filezilla-project.org/
					-> Client 프로그램 다운로드 후 설치 진행
					
		(2) 인증된 사용자만 접속이 가능한 FTP서버
			
			#vi /etc/vsftpd/vsftpd.conf
			15번행 local_enable=YES
				   // 로컬 계정을 이용하여 접속 및 다운로드 허용
				   // 로컬 계정 -> /etc/passwd 등록된 계정
				   
			18번행 write_enable=YES
					// 로컬 계정을 이용한 파일 생성/삭제/업로드
					   를 허용한다.
			
			22번행 local_umask=022
					// 로컬 계정이 생성한 파일에 적용할 UMASK 값
					// 파일 -> 644   디렉토리 -> 755
					
			계정 생성
			#useradd ftp-user1
			#passwd ftp-user1 			// 123
			
			Client-Linux
			#ftp ftp.dongsam.com
				계정 ftp-user1
				암호 123
			
			로컬 계정중에서도 FTP서비스에 사용하면 안되는 계정이나
			전혀 상관없는 계정들이 FTP에 사용되지 않도록 차단하거나
			허용을하여 특별한 계정만 사용할 수 있도록 구성해야한다.
			
			FTP 접속 계정 차단/허용 설정
				/etc/vsftpd/ftpusers
				- 접속을 차단할 계정의 목록이 저장되어있는 파일
				
				/etc/vsftpd/user_list
				- vsftpd.conf 설정에 따라 다르게 동작
				
					userlist_enable=NO
					- user_list 사용하지 않음
					
					userlist_enable=YES
					- user_list 파일을 사용
							
							userlist_deny=YES
							- user_list 파일을 차단 목록으로 사용한다.
							
							userlist_deny=NO 
							- user_list 파일을 허용 목록으로 사용한다.
							
	#vi /etc/vsftpd/vsftpd.conf
	
	119 userlist_enable=YES
	// user_list 파일을 사용한다.
	// 설정 파일에 작성된 내용이 아니면, 암묵적으로 기본값으로 동작한다.
	
		root 계정으로 ftp서버에 접속하기
		(1) Client에서 root계정으로 Server에 접속
			-> 계정명 입력 후, 패스워드 입력없이 바로 차단
		
		(2) /etc/vsftpd/user_list 파일에 등록된 root 계정 주석처리 후
			다시한번, Client에서 root계정으로 Server에 접속
			-> 계정명 입력 후, 패스워드 입력이 가능
			   정확한 패스워들 입력하여도 접속이 불가능
			   
		(3) /etc/vsftpd/ftpusers 파일에 등록된 root 계정을 주석처리 한후, Client에서 root계정으로 Server에 접속
			-> 접속이 가능
			
		결론 -> userlist_enable=YES 
		        userlist_deny 설정이 없는 경우 기본값으로 YES로 동작한다.
				(차단 목록으로 동작)
			
				user_list 파일에 계정명이 등록되어 차단된 경우에는
				암호 입력없이 거부
				
				ftpusers 파일에 계정명이 등록되어 차단되 경우에는
				정확한 암호를 입력하여도 거부
				
		실습
			(1) 계정 생성
			계정명			패스워드 
			ftp-user1		123	
			ftp-user2		123
			ftp-user3 		123
			
			(2) user_list 파일을 활성화 하고, 허용 목록으로 동작하도록
			    설정
				userlist_enable=YES
				userlist_deny=NO
				
				#service vsftpd restart 
				
			(3) ftp-user1 계정은 서버에 접속이 불가능하도록 설정
				#vi /etc/vsftpd/ftpusers
				
				ftp-user2 계정은 서버에 접속이 가능하도록 설정
				#vi /etc/vsftpd/user_list 
				
				ftp-user3 설정 변경 없이 접속 시도 후 결과 확인
				// user_list가 허용 목록을 동작할 경우에
				   user_list에 등록되지 않은 계정들은 모두 차단된다.
				   
	chroot 적용하기
		#vim /etc/vsftpd/vsftpd.conf
		// 주석을 모두 해제 

		97  번행 chroot_local_user=YES
		- 로컬 계정에게 chroot를 적용한다.
		
		98  번행 chroot_list_enable=YES
		- chroot_list 파일을 사용한다.
		
		100 번행 chroot_list_file=/etc/vsftpd/chroot_list
		- chroot_list 파일의 절대 경로
		
		chroot_list 파일
		- 해당 파일에 등록된 계정은 chroot가 적용되지 않는다.
		
		#service vsftpd restart
		
		(1) ftp-user3 계정을 user_list에 추가하여 접속이 가능하도록 설정
		(2) ftp-user2, ftp-user3 계정의 홈디렉토리아래 파일을 생성
			#touch /home/ftp-user2/ftp-user2-file
			#touch /home/ftp-user3/ftp-user3-file
			
		chroot_list 파일 생성
		- #vi /etc/vsftpd/chroot_list
		  ftp-user2
		  // ftp-user2 계정은 chroot를 적용하지 않는다.
		  
		ftp 서비스를 사용할 목적으로 만든 계정은 chroot를 이용하여
		자신의 홈디렉토리에서만 작업을 할 수 있도록 해야 보안상
		좋다.
		
		문제
			조건 (1) cp 명령어 실행 파일을 배포하는 ftp 서버
				 사용자들에게 ftp서버 주소와, 계정명을 공지
				 계정명 : ftp-user4
				 패스워드 : 123
				 
				 (2) FTP 서버 디렉토리 및 파일 경로
					 /FTP_CP/cp			// /bin/cp 복사하여 사용
					 
				 (3) chroot를 적용한다.	 
					 
				#useradd ftp-user4
				#passwd ftp-user4
				
				#usermod -d /FTP_CP ftp-user4
				// #vi /etc/passwd -> ftp-user4 홈디렉토리 /FTP_CP 로변경
				
				#mkdir /FTP_CP/
				#cp /bin/cp /FTP_CP/
				
				Client
				#ftp 100.100.100.110
					ftp-user4			
				ftp> pwd				/FTP_CP
				/
				ftp> ls 
				cp
					
	#vim /etc/vsftpd/vsftpd.conf				
	
	idle_session_timeout=600

	// 세션 유지 시간 (초)
	// 클라이언트가 서버에 접속한 상태에서 일정 시간 명령어를 입력하지
	   않으면, 서버쪽에서 세션을 종료 시킨다.
	   
	$TMOUT				 
	
				 
				 
				 
		
		
		
		
		  

	
				   
				
				
				
				
				
				
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			