initrd.img 파일 압축 해제 방법
	#mkdir initrd
	#cp /boot/initramfs-2.6.32-696.el6.x86_64.img ./initrd.img.gz
	#mv initrd.img.gz initrd
	#cd initrd/
	#gzip -d initrd.img.gz
	#cpio -idmv < initrd.img

initrd	초기 RAM 디스크 이미지 (initial ramdisk)

- 리눅스 커널 부팅 시 사용하는 임시 파일 시스템으로 init ram disk
초기 RAM 디스크 이미지는 메모리상에 일시적으로 적재되는 파일 시스템을 지칭
해당 이미지를 사용해 실제 루트 파일 시스템을 마운트 한다.


커널 이미지에(vmlinuz)는 최소한의 디바이스 드라이버만 내장되어 있어서, 해당 디바이스 드라이버를 가지고
시스템에 장착된 디바이스(장치)들을 동작시킬 수 없어, 시스템을 부팅 할 수 없다.

그래서 루트 파일 시스템, 디바이스 드라이버를 담은 작은 파일 시스템(initrd)을 메모리(ram)에 만들어,
이것을 마운트(/lib/module)하고 디바이스 드라이버를 읽어들이고 부팅에 필요한 하드웨어 준비 작업을 실행한다.

HDD등의 사용 준비가 끝나면 메모리에 적재된 루트 파일 시스템을 삭제하고 HDD에 루트 파일 시스템을 만들어 부팅을 진행한다.








커널이 로드되면, 즉시 컴퓨터의 메모리를 초기화하고 설정하며 시스템에 부착된 다양한 하드웨어를 설정하는데 여기에는 모든 프로세서들,
I/O 서브시스템들 그리고 저장 장치들이 포함된다. 이후 메모리의 미리 결정된 위치에서 압축된 initrd 이미지를 찾은 후에 압축을 해제하고
 마운트하며 필요한 모든 드라이버들을 로드한다. 다음으로 initrd 디스크 이미지를 언마운팅하고 디스크 이미지가 가져간 모든 메모리를 풀어주며, 
LVM 또는 소프트웨어 RAID 같은 파일 시스템과 관련된 가상 장치들을 초기화한다. 커널은 이후 루트 디바이스를 생성하고 루트 파티션을 읽기 
전용으로 마운트하고 사용되지 않은 메모리를 풀어준다. 이 지점에서 커널은 메모리에 로드되고 동작 가능해 진다. 
그러나 의미 있는 입력을 시스템에 허용하는 사용자 애플리케이션이 존재하지 않기 때문에 많은 일을 할 수는 없다.