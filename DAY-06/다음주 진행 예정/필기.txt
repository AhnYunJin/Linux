	프로세스 (Process)
		- 커널의 관리하에 현재 시스템에서 동작중인 프로그램
		- 커널은 프로세스를 관리하기위해 각 프로세스에게 PCB 할당
		
		PCB (Process Control Block)
		- 프로세스 고유 번호 (PID)
		- 우선 순위 (Priority)
		- 현재 상태 (Crurrent Status)
		- 프로세스 제어하위한 여러 정보가 저장되어있다.
			
	프로세스 종류
		- 데몬 (daemon) 프로세스
			사용자에게 특정 기능이나, 서비스를 제공하는 프로그램이다. 
				데몬의 동작 형태
				
				standalone 
					- 독립적으로 메모리상에 항상 상주해 있는 형태로 리소스 소모는 많지만,
					  응답속도가 빠른 형태이다.
					  
				xinetd
					- xinetd 데몬에 의해서 관리가되는 형태, 다른 데몬을 관리한다고 해서
					  슈퍼데몬이라고도 불리우며, 사용자에 요청이 있을때만 실행되어 리소스
					  소모는 적지만, 응답속도가 느린 형태이다.
					  
					  리눅스 마스터 시험용 데몬
					  ALSA - 사운드 관련 데몬
					  CUPS - 프린터 관련 데몬
					  SANE - 스캐너 관련 데몬
			
			- init 프로세스
				부팅 시 가장 먼저 실행되어 시스템에 전반적인 설정하는 초기화 프로세스
					  
			- 부모(Parent) 프로세스 		  
				부모 프로세스는 다른 프로세스를 생성하며, init을 제외한
				모든 프로세스는 부모 프로세스를 가지고 있다.

			- 자식(Child) 프로세스
				부모 프로세스에 의해 생성된 프로세스이다.
				자식 프로세스는 작업을 완료하면 결과를 부모프로세스에게 전달하고,
				종료된다.
				
			- 고아(Orphan) 프로세스
				자식 프로세스보다 부모 프로세스가 먼저 종료 됬을때 자식 프로세스는
				고아 프로세스가 되어 init프로세스가 관리하게 된다.
				
			- 좀비(Zombie) 프로세스
				자식 프로세스의 종료 신호 부모 프로세스가 처리하지 못할 경우,
				자식 프로세스는 좀비 프로세스가 된다.
				
	#ps (Process Status) - 시스템에 동작중인 프로세스를 확인
		#ps [option]
			-e 모든 프로세스를 리스트 형태로 출력
			-f (full format) 다양한 형식(필드)으로 출력
			
			-a 다른 사용자들의 프로세스도 출력
			-u 사용자 이름, 시간 등 상세한 정보 출력
			-x 현재 실행되고 있는 모든 프로세스를 출력
		
		#ps -ef
		UID - 프로세스를 실행 시킨 프로세스의 소유자를 의미
		PID - 실행된 프로세스에 커널이 부여한 숫자(ID)
		PPID - Parent Process ID 부모 프로세스의 ID
		C - 스케쥴링 관련 필드이지만, 현재는 사용안함
		STIME - 프로세스가 시작된 시간
		TTY - 프로세스가 연결된 터미널 장치
		TIME - 프로세스에 의해 CPU가 사용된 시간
		CMD - 실행한 프로세스 명(이름/명령어)