	LVM (Logical Volume Manager)
	- Disk 파티션을 효율적으로 관리하고 사용할 수 있는 방식
	- LVM2 ( Device Mapper)를 이용
	
	PV ( Physical Volume ) 물리 볼륨
		- /dev/sdb1, /dev/sdc1 같은 실제 하드 디스크의 파티션을 의미
	VG ( Volume Group ) 볼륨 그룹
		- 여러개의 PV를 그룹 묶은 것을 의미
	LV ( Logical Volume ) 
		- VG 다시 적절한 크기의 파티션으로 나눌 대 각 파티션을 LV라고
		  한다. 
	LE/PE ( Logical, Physical Extent )
	 - LV, PV가 가진 일정한 크기의 블록을 의미
	 
	LVM 생성
	(1) Server-A VM을 스냅샷을 이용하여 초기 상태 (디스크 추가 전)로 구성
	(2) 1GB 디스크 3개 추가 후 리부팅
		#fdisk -l									// Disk 추가 확인 ( sdb, sdc, sdd )
	(3) fdisk를 이용하여 파티션 생성
		#fdisk /dev/sdb						// sdc, sdd 동일 하게 진행
		"n"											// 새로운 파티션 생성
		"p"										// 주 파티션 생성
		"1"											// 파티션 번호  1
		"enter"									// 디스크의 시작 지점 부터
		"enter"									// 디스크의 마지막 지점까지 생성
		"t"											// 타입 변경
		"8e"										// Linux LVM (중요함!!)
		#fdisk -l									// 추가한 디스크 모두 파티션 생성 및 타입 변경 확인
		
	(4) PV 생성
		#pvcreate /dev/sdb1
		#pvcreate /dev/sdc1					// pv 생성
		#pvcreate /dev/sdd1
		
		Physical volume "[장치명]" successfully created		// pv 생성 완료 메세지 확인
		
	(5) VG (Volume Group) 생성
		#vgcreate [볼륨 그룹명] [장치명] [장치명] ... [장치명]
		
		#vgcreate PracticeVG /dev/sdb1 /dev/sdc1 /dev/sdd1
		Volume group "PracticeVG" successfully created
		
		#vgchange -a y [볼륨 그룹명]
		-a (active) y (yes) VG 활성화
		-a (active) n (no)  VG 비활성
		
		#vgchange -a y PracticeVG
		0 logical volume(s) in volume group "PracticeVG" now active
	(6) VG 구성 확인
		#vgscan
		Reading all physical volumes.  This may take a while...
		Found volume group "PracticeVG" using metadata type lvm2
		
		#vgdisplay 									// 시스템 전체 VG 확인
		#vgdisplay [볼륨 그룹명] 				// 해당 VG만 확인
		
		#vgdisplay PracticeVG
		VG Name           PracticeVG			// VG 이름
		Cur PV               3						// 현재 PV의 개수
		Act PV               3						// 활성화 되어있는 PV개수
		VG Size              2.98 GiB				// VG크기
		PE Size               4.00 MiB				// VG를 구성하고 있는 블록 (4MB)
		Total PE              762					// 총 블록의 개수 (762) -> 4MB * 762 = 3GB
		Alloc PE / Size      0 / 0   				// 할당된 블록의 수 / 용량
		Free  PE / Size      762 / 2.98 GiB		// 여유  블록의 수 / 용량
	
	(7) LV 생성
		#lvcreate --size [+,-, ,용량] --name [LV명] [VG명]
		#lvcreate --extents [+,-, ,블록] --name [LV명] [VG명]
		
		 용량/블록  : 해당 크키로 LV를 생성
	   +용량/블록  : 해당 크기를 추가할때
	   -용량/블록   : 해당 크기를 제거할때 
	
	1번 LV - 이름 PracticeLV1 용량 500M
	2번 LV - 이름 PracticeLV2 용량 1.5GB
	3번 LV - 이름 PracticeLV3 용량 나머지 전부
	
		#lvcreate --size 500M --name PracticeLV1 PracticeVG					// 500M
			Logical volume "PracticeLV1" created.
		#lvcreate --size 1.5GB --name PracticeLV2 PracticeVG					// 1.5GB
			Logical volume "PracticeLV2" created.
		#lvcreate --extents 100%FREE --name PracticeLV3 PracticeVG		// 나머지 전부를 할당
			 Logical volume "PracticeLV3" created.
		
	(8) LV 구성 확인
		#lvdisplay											// 시스템 전체  LV 확인
		#lvdisplay [LV 경로]								// 지정한 LV 확인
		#lvdisplay /dev/PracticeVG/PracticeLV1
			LV Size                500.00 MiB
			Current LE             125
		#lvdisplay /dev/PracticeVG/PracticeLV2
			LV Size                1.50 GiB
			Current LE             384
		#lvdisplay /dev/PracticeVG/PracticeLV3
			LV Size                1012.00 MiB
			Current LE             253

	(9) 파일 시스템 생성, 마운트
		#mkfs -t ext4 /dev/PracticeVG/PracticeLV1
		#mkfs -t ext4 /dev/PracticeVG/PracticeLV2
		#mkfs -t ext4 /dev/PracticeVG/PracticeLV3
		
		#mkdir /LV{1,2,3}
		#mount /dev/PracticeVG/PracticeLV1 /LV-1
		#mount /dev/PracticeVG/PracticeLV2 /LV-2					#umount [마운트포인트]
		#mount /dev/PracticeVG/PracticeLV3 /LV-3					
		#df -h 													마운트 확인
		
	(10) /etc/fstab 등록
		#blkid					// LVM UUID 확인
		#vi /etc/fstab			// LVM 정보 및 마운트 옵션 설정
		UUID=54aa7165-3b46-4aff-8c11-2d653fc1e6c0 	/LV-1 ext4 defaults 0 0 
		UUID=39862b49-4c1f-44b3-9917-b953233bf5cd   /LV-2 ext4 defaults 0 0
		UUID=9563176e-c542-4842-b339-0ee8e0ffbbdb   /LV-3 ext4 defaults 0 0
		#reboot					// 자동 마운트 확인 

	
	실습 ) Disk 1GB Disk 2개 추가하여 아래 조건에 맞게 LVM 구성
		조건 - 파티션 4개 생성, 용량 자유
		         PV4개 생성 후, VG 생성 ( VG 이름 자유 )
				 총 4개의 LV생성 ( LV 이름 자유 / 용량 자유 )
				 단 LV-4 ~ LV-7 디렉토리에 마운트
				 부팅 시 자동으로 마운트 되도록 설정 단, UUID				 
		
	
	기존 LV를 삭제 후, 남은 용량으로 기존에 생성한 다른LV에 추가
	- #vgdisplay PracticeVG
	
	(1) PracticeLV3 제거
		#umount /LV-3				// 언마운트
		#lvremove /dev/PracticeVG/PracticeLV3
		Do you really want to remove active logical volume PracticeLV3? [y/n]: y
		Logical volume "PracticeLV3" successfully removed
	
		- #vgdisplay PracticeVG
		Alloc PE / Size       509 / 1.99 GiB
		Free  PE / Size       253 / 1012.00 MiB
		
	(2) PracticeLV1 용량 증설
		
		1. #lvextend --size +[크기] /dev/PracticeVG/PracticeLV1
		2. #lvextend --extents +[블록] /dev/PracticeVG/PracticeLV1
		
	- 모든 블록(용량)을 PracticeLV1 추가
		#lvextend --extents +253 /dev/PracticeVG/PracticeLV1
		
	Size of logical volume PracticeVG/PracticeLV1 changed from
	500.00 MiB (125 extents) to 1.48 GiB (378 extents).
    Logical volume PracticeLV1 successfully resized.

		#vgdisplay PracticeVG 
		Alloc PE / Size       762 / 2.98 GiB
		Free  PE / Size       0 / 0   

	#df -h
	/dev/mapper/PracticeVG-PracticeLV1
                      477M  2.3M  449M   1% /LV-1
	#lvdisplay /dev/PracticeVG/PracticeLV1
	LV Size                1.48 GiB
	
	실제 용량은 변하지 않음
	#resize2fs /dev/PracticeVG/PracticeLV1
	파일 시스템의 크기를 재조정
	
	#df -h
	/dev/mapper/PracticeVG-PracticeLV1
                      1.5G  2.8M  1.4G   1% /LV-1
	/dev/mapper/PracticeVG-PracticeLV2
                      1.5G  2.3M  1.4G   1% /LV-2

				실습)
				1GB Disk 추가하여 PracticeVG 추가하여 PracticeLV1 의 용량을 2.5GB 만들기
				- #vgextend [볼륨그룹명] [PV명]
				
				#lvextend --size +[크기] /dev/PracticeVG/PracticeLV1
				#lvextend --extents +[블록] /dev/PracticeVG/PracticeLV1
				
				
				
				
				
				
				
				
				
				
		
		
		
		
		
